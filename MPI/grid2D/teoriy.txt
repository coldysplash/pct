Задача - Решение стационарного двумерного уравнения Лапласа 
с использованием двумерной декомпозиции расчетной области

Для решения будем использовать итерационный метод Якоби и схему "крест"

В схеме "крест" используется 2 сетки , значение новой сетки вычисляются на основе 
значений предыдущей как среднее по сумме значений вокруг некоторой точки,
берем значение функции в точках вокруг нее и делим на 4
Если мы вычисляем элемент который находится на границе то его значение уже известно.

Параллельная версия метода Якоби (2D двумерная декомпозиция) 

- Расчетная сетка разбивается на подматрицы ny / p, nx / p и распределяется между процессами
- Сетка хранится в памяти в распределенном виде.

Проблема - для расчета некоторых точек требуются данные соседних полос, 
которые находятся в памяти других процессов.

Мы также вынуждены хранить теневые ячейки, но теперь мы будем выделять память 
еще на столбец слева и на столбец справа

MPI_Dims_create - это функция позволяет заданное число процессов разложить на два сомножителя 

Делаем проверку на попытку запуска с px py = 1, в данном случае не запускаем программу. потому что она будем одномерной 

MPI_Cart_create - создает двумерную сетку процессов . 
Появляется новый коммуникатор cartcomm который будет содержать две координаты (x,y).
Теперь мы можем легко определить соседей процесса сверху и снизу.

Каждый процесс определет свои координаты rankx ranky с помошью MPI_Cart_coords.

с помощью MPI_Cart_shift определяем номера соседей для процесса.

Создаем производные типы данных . для левого и правого столбца это будут векторы.

Обмен теневыми ячейками. Теперь у нас 8 реквостов . В худшем случае может быть явно четыре соседы 
и мы должны будем сделать 4 отправки и 4 приема сообщений. 
(MPI_proc_NULL если соседа нет. операция просто завершается )